{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"name": "Neovim Kickstart Configuration",
	"version": "1.0.0",
	"system_prompt": "You are an expert Neovim configuration assistant. Help the user configure, debug, and optimize their Neovim setup based on the kickstart.nvim foundation. Focus on Lua scripting, plugin configuration, LSP setup, and modern Neovim best practices.",
	"vars": {
		"config_root": ".",
		"kickstart_plugins": "./lua/kickstart/plugins",
		"custom_plugins": "./lua/custom/plugins"
	},
	"groups": [
		{
			"name": "Core Configuration",
			"system_prompt": "Focus on the main init.lua file and core Neovim settings. Help with basic configuration, keymaps, options, and the overall structure of the configuration.",
			"data": [
				"init_lua",
				"health_check"
			]
		},
		{
			"name": "LSP & Language Support",
			"system_prompt": "Help with Language Server Protocol configuration, treesitter setup, and language-specific settings. Focus on diagnostics, completion integration, and language features.",
			"data": [
				"init_lua_lsp",
				"debug_config"
			]
		},
		{
			"name": "CodeCompanion & AI Tools",
			"system_prompt": "Help configure and optimize CodeCompanion for LLM interactions, as well as Copilot integration. Focus on AI-assisted coding workflows and prompt engineering.",
			"data": [
				"codecompanion_config",
				"copilot_config"
			]
		},
		{
			"name": "UI & Interface",
			"system_prompt": "Assist with visual configuration including themes, statusline, file explorer, and interface elements. Focus on aesthetics and user experience.",
			"data": [
				"catppuccin_theme",
				"lualine_config",
				"alpha_dashboard",
				"neo_tree",
				"indent_lines"
			]
		},
		{
			"name": "Navigation & Productivity",
			"system_prompt": "Help with navigation tools, project management, and productivity features. Focus on efficient workflows and quick access to files and functions.",
			"data": [
				"portal_config",
				"grapple_config",
				"matchup_config"
			]
		},
		{
			"name": "Development Workflow",
			"system_prompt": "Assist with Git integration, testing, linting, and development tools. Focus on code quality and development workflows.",
			"data": [
				"gitsigns_config",
				"neogit_config",
				"lint_config",
				"vim_test_config"
			]
		},
		{
			"name": "Editor Enhancement",
			"system_prompt": "Help with editor features like autopairs, debugging, and text manipulation. Focus on improving the editing experience.",
			"data": [
				"autopairs_config",
				"debug_config",
				"custom_plugins_init"
			]
		}
	],
	"data": {
		"init_lua": {
			"type": "file",
			"path": "./init.lua",
			"description": "Main Neovim configuration file - contains core settings, keymaps, and plugin setup"
		},
		"health_check": {
			"type": "file",
			"path": "./lua/kickstart/health.lua",
			"description": "Health check utilities for the kickstart configuration"
		},
		"init_lua_lsp": {
			"type": "symbols",
			"path": "./init.lua",
			"description": "LSP-related symbols and configurations from init.lua"
		},
		"init_lua_completion": {
			"type": "symbols",
			"path": "./init.lua",
			"description": "Completion and snippet related configurations from init.lua"
		},
		"codecompanion_config": {
			"type": "file",
			"path": "./lua/custom/plugins/codecompanion.lua",
			"description": "CodeCompanion plugin configuration for LLM interactions"
		},
		"copilot_config": {
			"type": "file",
			"path": "./lua/custom/plugins/copilot.lua",
			"description": "GitHub Copilot plugin configuration"
		},
		"catppuccin_theme": {
			"type": "file",
			"path": "./lua/custom/plugins/catppuccin.lua",
			"description": "Catppuccin colorscheme configuration"
		},
		"lualine_config": {
			"type": "file",
			"path": "./lua/custom/plugins/lualine.lua",
			"description": "Lualine statusline configuration"
		},
		"alpha_dashboard": {
			"type": "file",
			"path": "./lua/custom/plugins/alpha.lua",
			"description": "Alpha dashboard/start screen configuration"
		},
		"neo_tree": {
			"type": "file",
			"path": "./lua/kickstart/plugins/neo-tree.lua",
			"description": "Neo-tree file explorer configuration"
		},
		"indent_lines": {
			"type": "file",
			"path": "./lua/kickstart/plugins/indent_line.lua",
			"description": "Indent line visualization configuration"
		},
		"portal_config": {
			"type": "file",
			"path": "./lua/custom/plugins/portal.lua",
			"description": "Portal navigation plugin configuration"
		},
		"grapple_config": {
			"type": "file",
			"path": "./lua/custom/plugins/grapple.lua",
			"description": "Grapple file tagging and navigation configuration"
		},
		"matchup_config": {
			"type": "file",
			"path": "./lua/custom/plugins/matchup.lua",
			"description": "Vim-matchup plugin for improved % navigation"
		},
		"gitsigns_config": {
			"type": "file",
			"path": "./lua/kickstart/plugins/gitsigns.lua",
			"description": "Gitsigns plugin for Git integration in buffers"
		},
		"neogit_config": {
			"type": "file",
			"path": "./lua/custom/plugins/neogit.lua",
			"description": "Neogit plugin for Git interface"
		},
		"lint_config": {
			"type": "file",
			"path": "./lua/kickstart/plugins/lint.lua",
			"description": "Linting configuration and setup"
		},
		"vim_test_config": {
			"type": "file",
			"path": "./lua/custom/plugins/vim-test.lua",
			"description": "Vim-test plugin for running tests"
		},
		"autopairs_config": {
			"type": "file",
			"path": "./lua/kickstart/plugins/autopairs.lua",
			"description": "Auto-pairs plugin for automatic bracket/quote pairing"
		},
		"debug_config": {
			"type": "file",
			"path": "./lua/kickstart/plugins/debug.lua",
			"description": "Debug adapter protocol (DAP) configuration"
		},
		"custom_plugins_init": {
			"type": "file",
			"path": "./lua/custom/plugins/init.lua",
			"description": "Custom plugins initialization and management"
		}
	}
}
